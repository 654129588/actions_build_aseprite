name: Get latest release version
on:
  watch:
  push:
    types: [started]
  schedule:
    - cron:  '0 10 * * *'
jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch release version
        run: |
          curl -sL https://api.github.com/repos/Insouciant21/action_aseprite/releases/latest | jq -r ".tag_name" > release-versions/version.txt
          curl -sL https://api.github.com/repos/aseprite/aseprite/releases/latest | jq -r ".tag_name" > release-versions/version-check.txt
      - name: Import GPG
        uses: crazy-max/ghaction-import-gpg@v1.4.1
        with:
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_committer_name: Insouciant21
          git_committer_email: ${{ secrets.owner_email }}
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      - name: commit local version
        run: |
          git config --global commit.gpgsign true
          git config --global user.email ${{ secrets.owner_email }}
          git config --global user.name "Insouciant21"
          git add release-versions/version.txt
          git commit -S -m "update local version"
          git push
      - name: Check for new version
        id: git-check
        run: echo ::set-output name=modified::$(if diff release-versions/version.txt release-versions/version-check.txt -q; then echo "false"; fi)
      - name: config and commit new version
        if: steps.git-check.outputs.modified != 'false'
        run: |
          curl -sL https://api.github.com/repos/aseprite/aseprite/releases/latest | jq -r ".tag_name" > release-versions/version.txt
          git add .
          git commit -S -m "New release version"
          git push
      - name: Repository Dispatch
        if: steps.git-check.outputs.modified != 'false'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.work1 }}
          event-type: new-release
